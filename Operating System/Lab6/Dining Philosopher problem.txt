/* 
 * File:   main.c
 * Author: HP
 *
 * Created on 28 February, 2021, 3:21 PM
 */

#include <stdio.h>
#include <stdlib.h>
#include <semaphore.h>
#include <pthread.h>
#include <unistd.h>

sem_t room,chopstick[5];
void *philosopher(void*);
void eat(int);
int a[5];



int main( ) {
    int i;
    pthread_t tid[5];
    sem_init(&room,0,1);
    for (int i=0;i<5;i++)
        sem_init(&chopstick[i],0,1);
    for (int i=0;i<5;i++){
        a[i]=i;
        pthread_create(&tid[i],NULL,philosopher,(void*)&a[i]);}
    for (int i=0;i<5;i++){
        pthread_join(tid[i],NULL);}
}

        void *philosopher (void *num){
            int phil = *(int*)num;
            sem_wait(&room);
            printf("\n Philosopher %d has entered room",phil);
            sem_wait(&chopstick[phil]);
            sem_wait(&chopstick[(phil+1)%5]);
            eat(phil);
            sleep(2);
            printf("\nPhilosopher %d has finished eating",phil);
            sem_post(&chopstick[(phil+1)%5]);
            sem_post(&chopstick[phil]);
            sem_post(&room);
        }
        void eat(int phil){
            printf("\n Philosopher %d is eating",phil);
            
            
    
    
    
    
        
        }

